name: Deploy to Render

on:
  push:
    branches:
      - master

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Docker Buildx (for multi-platform builds if needed)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to Docker Hub (optional, only if you're pushing to Docker Hub)
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Build and push the backend Docker image
      - name: Build and Push Backend Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/backend:latest ./server/Dockerfile.prod
          docker push ${{ secrets.DOCKER_USERNAME }}/backend:latest

      # Step 5: Build and push the frontend Docker image
      - name: Build and Push Frontend Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:latest ./client
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest

      # Step 6: Deploy Backend to Render
      - name: Deploy Backend to Render
        run: |
          curl -X POST "https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID_BACKEND }}/deploys" \
          -H "Authorization: Bearer ${{ secrets.RENDER_TOKEN }}" \
          -H "Content-Type: application/json"

      # Step 7: Deploy Frontend to Render
      - name: Deploy Frontend to Render
        run: |
          curl -X POST "https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID_FRONTEND }}/deploys" \
          -H "Authorization: Bearer ${{ secrets.RENDER_TOKEN }}" \
          -H "Content-Type: application/json"
